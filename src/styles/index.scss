@use 'tailwindcss/base';
@use 'tailwindcss/components';
@use 'tailwindcss/utilities';


@use './consts' as ct;
@use './colors' as cl;
@use 'sass:map';
@use './tags';

// Variables de colores
$themes: (
  light: (
    background: cl.$light-background,
    text: #213547,
    primary: cl.$light-color-primary-a0,
    navegator: cl.$light-navegator,
    button-bg: #215bf1,
  ),
  dark: (
    background: cl.$dark-background,
    text: cl.$dark-color-letter,
    primary: cl.$dark-color-primary-a20,
    navegator: cl.$dark-navegator,
    button-bg: #215bf1,
  )
);

// Mixin para obtener propiedades según el modo
@mixin set-theme($theme) {
  --background: #{map.get($theme, background)};
  --text: #{map.get($theme, text)};
  --navegator: #{map.get($theme, navegator)};
  --primary: #{map.get($theme, primary)};
  --button-bg: #{map.get($theme, button-bg)};
}

:root.light {
  @include set-theme(map.get($themes, light));
}

:root.dark {
  @include set-theme(map.get($themes, dark));
}

:root {
  background-color: var(--background);
  color: var(--text);
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  scroll-behavior: smooth;
}

a {
  font-weight: 500;
  transition: color 0.3s ease;
  text-decoration: inherit;
  cursor: pointer;

  &:hover {
    color: var(--primary);
  }
  &.--active {
    color: var(--primary);
  }
}

// Botones
button {
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  // background-color: var(--button-bg);
  cursor: pointer;
  transition: border-color 0.25s;

  &:hover {
    border-color: #646cff;
  }

  &:focus,
  &:focus-visible {
    outline: 4px auto -webkit-focus-ring-color;
  }
}

.goog-tooltip {
  color:  black;
}

.no-scroll {
  overflow: hidden;
}

// Navegador
.navegator {
  z-index: 1;
  background-color: var(--navegator);
  box-shadow: 0px 0px 5px 0px var(--primary);

  ul {
    li {
      text-align: center;
      gap: 20px;

      .icon {
        font-size: 1.8rem;
      }
    }
  }
}

.lang {
  background-color: var(--navegator);
  padding: 0.5rem 0.8rem ;
  text-align: center;
}

.avatar {
  box-sizing: border-box;
  height: ct.$av-size;
  width: ct.$av-size;
	border-radius: 50%;
	position: relative;
  box-shadow: 0px 0px 50px var(--primary);

  &__image {
		width: 100%;
		border-radius: 50%;
	}

  &::before,
	&::after {
		border: ct.$av-border-width solid transparent;
		border-radius: 50%;
		border-top: ct.$av-border-width solid var(--primary);
		content:"";
		display: block;
		height: calc(100% + 10px);
		left: 50%;
		width: calc(100% + 10px);
		position: absolute;
	}
	
	&::before {
		top: -2 * ct.$av-border-width;
		transform: translateX(-50%);
	}
	
	&::after {
		bottom: -2 * ct.$av-border-width;
		transform: translateX(-50%) rotate(180deg);
	}
}

.contact {
  &__information {
    background-color: var(--navegator);
  }
}

/* Estilos para dispositivos móviles */
@media (max-width: 768px) {

  .navegator {
    width: ct.$nav-mobile-width;
    ul {
      li {
        .icon {
          font-size: 2rem;
        }
        .title {
          font-size: 0.85rem;
          &--lang {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
          }
        }
        
      }
    }
  }

  .lang {
    left: ct.$nav-mobile-width;
    top: -10px;
    width: calc(ct.$nav-mobile-width*1.5);
  }

  .menu {
    z-index: 1;
    font-size: 1.5rem;
    background-color: var(--navegator);
    box-shadow: 0px 0px 5px 0px var(--primary);
  }

  
}

@media (orientation: landscape) and (max-width: 768px) {
  .avatar {
    height: calc(ct.$av-size/2.5);
    width: calc(ct.$av-size/2.5);
    background-color: red;
  }

  .navegator {
    overflow-y: auto;
    
  }

  .lang {
    margin-bottom: 20px;
  }
}

/* Estilos para desktop */
@media (min-width: 769px) {
  .wrapper {
    margin-left: ct.$nav-desktop-width;
  }

  .navegator {
    width: ct.$nav-desktop-width;
    ul {
      li {
        .icon {
          font-size: 2rem;
        }
        .title {
          font-size: 0.875rem;
          &--lang {
            font-size: 1.2rem;
          }
        }

        
      }
    }
  }

  .lang {
    left: ct.$nav-desktop-width;
    top: -10px;
    width: calc(ct.$nav-desktop-width);
  }

  .contact {
    &__img {
      object-fit: cover;
      object-position: center;
    }
  }
}

.move-up {
  animation: moveDown .5s linear forwards; /* Aplicar animación */
}

.move-down {
  animation: moveUp .5s linear forwards; /* Aplicar animación */
}

.move-left {
  animation: moveLeft .5s linear forwards; /* Aplicar animación */
}

.move-right {
  animation: moveRight .5s linear forwards; /* Aplicar animación */
}

@keyframes moveUp {
  0% {
    transform: translateY(-105%); /* Empezar en la posición original */
  }
  100% {
    transform: translateY(0%); /* Mover hacia la izquierda */
  }
}

@keyframes moveDown {
  0% {
    transform: translateY(0); /* Empezar en la posición original */
  }
  100% {
    transform: translateY(-105%); /* Mover hacia la izquierda */
  }
}

@keyframes moveLeft {
  0% {
    transform: translateX(0); /* Empezar en la posición original */
  }
  100% {
    transform: translateX(-105%); /* Mover hacia la izquierda */
  }
}

@keyframes moveRight {
  0% {
    transform: translateX(-105%); /* Empezar en la posición original */
  }
  100% {
    transform: translateX(0%); /* Mover hacia la izquierda */
  }
}